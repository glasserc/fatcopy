#! /usr/bin/env python
"""Script to recursively copy files and directories onto a FAT filesystem.

Useful to copy music with *?: filenames onto my MP3 player."""

import sys
import os.path
import fsio
import argparse

class Application(object):
    def parse_args(self, args):
        parser = argparse.ArgumentParser(description='Copy files recursively in a FAT-safe way.')
        parser.add_argument('src', metavar='src', type=str, nargs='+',
                            help='the source file(s) or directories')
        parser.add_argument('dest', metavar='dest', type=str,
                            help='the destination file or directory')
        parser.add_argument('--merge', dest='merge', action='store_const',
                            const=True, default=False,
                            help='assume existing files are OK')

        return parser.parse_args(args)

class FatCopy(Application):
    def __init__(self):
        super(FatCopy, self).__init__()
        self.fs = fsio
        self.args = None  # replaced with a call to argparse later

    def fat_safe(self, fname):
        return fname.replace('?', '_').replace('*', '_').replace(':', '_')

    def fatcopy_list(self, srcs, dest):
        if not self.fs.isdir(dest):
            raise ValueError("{0} is not a directory".format(dest))

        for fname in srcs:
            srcbase = os.path.basename(fname)
            dfname = os.path.join(dest, self.fat_safe(srcbase))
            self.fatcopy_single(fname, dfname)

    def fatcopy_single(self, src, dest):
        #print("Single: {0} -> {1}".format(src, dest))
        srcbase = os.path.basename(src)
        if self.fs.isdir(src) and self.fs.exists(dest) and not self.fs.isdir(dest):
            raise ValueError("cannot overwrite non-directory {1} with directory {0}".format(src, dest))

        if self.fs.isdir(dest):
            dest = os.path.join(dest, self.fat_safe(srcbase))

        if not self.fs.isdir(src):
            self.fs.copyfile(src, dest)
        else:
            self.fs.mkdir(dest)
            contents = self.fs.listdir(src)
            contents = [os.path.join(src, x) for x in contents]
            self.fatcopy_list(contents, dest)

    def main(self, *args):
        args = self.args = self.parse_args(args)

        if len(args.src) == 1:
            self.fatcopy_single(args.src[0], args.dest)
        else:
            self.fatcopy_list(args.src, args.dest)

if __name__ == '__main__':
    FatCopy().main(*sys.argv)
